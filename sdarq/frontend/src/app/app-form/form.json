{
    "description": "Welcome to New App Questionnaire",
    "logoPosition": "right",
    "completedHtml": "<p><h3>Thank you!</h3></p>",
    "pages": [{
            "name": "Metadata",
            "elements": [{
                    "type": "text",
                    "name": "Service",
                    "title": "App name",
                    "requiredErrorText": "Required field",
                    "validators": [{
                        "type": "regex",
                        "text": "Please include numbers, a-z characters, _,- (3-20).",
                        "regex": "^[a-zA-Z0-9][a-zA-Z0-9-_ ]{1,28}[a-zA-Z0-9]$"
                    }]
                },
                {
                    "type": "comment",
                    "name": "Description",
                    "title": "A brief description of the application/service (provide link to external doc if easier)",
                    "requiredErrorText": "Required field",
                    "validators": [{
                        "type": "regex",
                        "text": "Please include numbers, a-z characters, _,- . ? !(4-200).",
                        "regex": "[[a-zA-Z0-9-_/ .?!]{4,200}"
                    }]
                },
                {
                    "type": "text",
                    "name": "Security champion",
                    "title": "Security champion (main point of contact from a security perspective):",
                    "requiredErrorText": "Required field",
                    "validators": [{
                        "type": "regex",
                        "text": "Please include numbers, a-z characters, _,- (1-20).",
                        "regex": "^[a-zA-Z0-9][a-zA-Z0-9-._\\s]{1,20}[a-zA-Z0-9]$"
                    }]
                },
                {
                    "type": "text",
                    "name": "Github URL",
                    "title": "Github URL (N/A if you have not written a line of code yet)",
                    "requiredErrorText": "Required field",
                    "validators": [{
                        "type": "regex",
                        "text": "Please enter a valid link",
                        "regex": "(http|https)\\:\\/\\/[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(\\/\\S*)?"
                    }]
                },
                {
                    "type": "text",
                    "name": "Architecture Diagram",
                    "title": "Link to Architecture Diagram, ideally a Lucidchart diagram.",
                    "requiredErrorText": "Required field",
                    "validators": [{
                        "type": "regex",
                        "text": "Please enter a valid link.",
                        "regex": "(http|https)\\:\\/\\/[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(\\/\\S*)?"
                    }]
                }
            ],
            "title": "Metadata"
        },
        {
            "name": "Architecture",
            "elements": [{
                    "type": "radiogroup",
                    "name": "question1",
                    "title": "Which Cloud Plaform are you using to deploy your app?",
                    "choices": [{
                            "value": "azure",
                            "text": "Microsoft Azure"
                        },
                        {
                            "value": "gcp",
                            "text": "Google Cloud Platform"
                        },
                        {
                            "value": "azure_gcp",
                            "text": "Both"
                        }
                    ]
                },
                {
                    "type": "radiogroup",
                    "name": "Architecture",
                    "title": "On which service is your app based (must be one of the following)?",
                    "choices": [{
                            "value": "Managed_kubernetes",
                            "text": "Managed Kubernetes"
                        },
                        {
                            "value": "Managed_vm",
                            "text": "Managed VM"
                        }
                    ],
                    "otherText": "Other"
                }
            ],
            "title": "Architecture"
        },
        {
            "name": "Security",
            "elements": [{
                    "type": "checkbox",
                    "name": "Security tools",
                    "title": "Please select applicable items",
                    "choices": [{
                            "value": "dependency_scan",
                            "text": "We are currently using SourceClear/Snyk or similar tools for downstream dependency/3rd party component management "
                        },
                        {
                            "value": "Git-secrets",
                            "text": "We are currently using git-secrets in our repository"
                        },
                        {
                            "value": "Secret_management",
                            "text": "We are currently using tools to store our secrets"
                        },
                        {
                            "value": "Monitoring_tool",
                            "text": " We are currently using Sentry or a similar tool (ex: Google Debug) for exception handling and reporting"
                        },
                        {
                            "value": "SAST",
                            "text": "We are currently using Codacy, SonarCloud or similar tools for security static code analysis"
                        },
                        {
                            "value": "Image_scan",
                            "text": "We are currently using tools to scan our Docker images"
                        },
                        {
                            "value": "DAST",
                            "text": "Our service is currently scanned weekly/monthly via ZAP or similar tools (if there is a static IP)"
                        }
                    ]
                },
                {
                    "type": "checkbox",
                    "name": "Applicable",
                    "title": "Check what's applicable",
                    "choices": [{
                            "value": "managed-sql",
                            "text": "I am using a managed SQL database"
                        },
                        {
                            "value": "in-cluster-sql",
                            "text": "I am using an in-cluster SQL database"
                        }
                    ]
                },
                {
                    "type": "radiogroup",
                    "name": "docker_images_update",
                    "title": "Is there a plan to update Docker base images?",
                    "choices": [
                        "Yes",
                        "No"
                    ]
                },
                {
                    "type": "comment",
                    "name": "docker_images_update_plan",
                    "visibleIf": "{docker_images_update} = 'Yes'",
                    "title": "Please describe the plan"
                }
            ],
            "title": "Security"
        },
        {
            "name": "Logging",
            "elements": [{
                    "type": "radiogroup",
                    "name": "Logging",
                    "title": "Are you currently logging or planning to log to either Azure Monitor/Stackdriver or similar tools?",
                    "choices": [
                        "Yes",
                        "No"
                    ]
                },
                {
                    "type": "radiogroup",
                    "name": "Logs persistence for at least 90 days",
                    "visibleIf": "{Logging} = \"Yes\"",
                    "title": "Do logs persist for at least 90 days in a searchable form?",
                    "enableIf": "{Logging} = \"Yes\"",
                    "choices": [
                        "Yes",
                        "No"
                    ]
                },
                {
                    "type": "radiogroup",
                    "name": "Are logs reviewed",
                    "visibleIf": "{Logging} = \"Yes\"",
                    "title": "Are those logs being reviewed by either humans or are alerts set up for anomalous situations?",
                    "enableIf": "{Logging} = \"Yes\"",
                    "choices": [
                        "Yes",
                        "No"
                    ]
                },
                {
                    "type": "radiogroup",
                    "name": "Authent/Authorz attemps logged",
                    "visibleIf": "{Logging} = \"Yes\"",
                    "title": "Are failed authentication and authorization attempts also logged?",
                    "enableIf": "{Logging} = \"Yes\"",
                    "choices": [
                        "Yes",
                        "No"
                    ]
                }
            ],
            "title": "Logging",
            "description": "Application logging should be always be included for security events. Application logs provide invaluable data for indentifying security incidents, monitoring policy violations, providing information about problems and unusual conditions. They might also be used to record other types of events too such as audit trails e.g. data addition, modification and deletion, data exports, as well as data for subsequent requests for information e.g. data subject access, freedom of information, litigation, police and other regulatory investigations."
        },
        {
            "name": "Testing",
            "elements": [{
                    "type": "radiogroup",
                    "name": "Unit testing",
                    "title": "How would you describe the code coverage of your unit tests?",
                    "choices": [{
                            "value": "Robust",
                            "text": "Robust: The vast majority of our code is tested or will be tested through unit tests. "
                        },
                        {
                            "value": "Weak",
                            "text": " Weak: We have some unit testing, but much of the code is not tested and have no plan of changing it in the future. "
                        },
                        {
                            "value": "Nonexistent",
                            "text": " Nonexistent: We currently have no (or almost no) unit tests."
                        }
                    ]
                },
                {
                    "type": "radiogroup",
                    "name": "Performance testing",
                    "title": "How would you describe the code coverage of your performance tests?",
                    "choices": [{
                            "value": "Robust",
                            "text": "Robust: The vast majority of our code is tested or will be tested through performance/scale tests. "
                        },
                        {
                            "value": "Weak",
                            "text": " Weak: We have some performance testing, but much of the code is not tested and have no plan of changing it in the future. "
                        },
                        {
                            "value": "Nonexistent",
                            "text": " Nonexistent: We currently have no (or almost no) performance tests."
                        }
                    ]
                },
                {
                    "type": "radiogroup",
                    "name": "Post-launch monitoring",
                    "title": "How would you describe your post-launch monitoring?",
                    "choices": [{
                            "value": "Robust",
                            "text": "Robust: We have procedures in place to log and monitor for unexpected crashes, exceptions, and other error conditions. If something looks suspicious, a security-conscious engineer evaluates it. "
                        },
                        {
                            "value": "Weak",
                            "text": "Weak: If something goes terribly wrong, such as massive spikes in crash rates or other large-scale anomalies, we will probably notice. But our monitoring is fairly coarse, and there is room for improvement. "
                        },
                        {
                            "value": "Nonexistent",
                            "text": " Nonexistent: At the moment, we are not doing any kind of post-release monitoring that looks for signs of exploitation or increases in crashes/exceptions."
                        }
                    ]
                }
            ],
            "title": "Testing",
            "description": "Simple unit tests: Unit tests are typically used to confirm that the basic building blocks of the application work as expected. Unit tests are easy to repeat — they can run whenever new code is checked into the repository, to confirm that the code still behaves as expected. Unit tests can also check for security features. For example, they can be used to confirm that authentication is required to access user data; or that unexpected HTML tags can't get through input filters or escaping routines. \n\nPerformance/Monitoring testing: Once the application is deployed, the focus usually shifts from testing to monitoring. Watch out for unexpected spikes in error rates, sandbox violations, and other flaky or inexplicable behavior (including intermittent test failures) — and before you dismiss an anomaly, check with your security team. Crashes and flakiness can indicate a race condition or a memory corruption bug (if applicable)."
        },
        {
            "name": "Deployment",
            "elements": [{
                "type": "checkbox",
                "name": "Deployment",
                "title": "Please select what's applicable",
                "choices": [{
                        "value": "Config files do NOT contain any secrets ",
                        "text": "Our Deployment config files do NOT contain any secrets "
                    },
                    {
                        "value": "Config files are templatized ",
                        "text": "Our Deployment config files are templatized "
                    }
                ]
            }],
            "title": "Deployment"
        },
        {
            "name": "Reliability",
            "elements": [{
                "type": "checkbox",
                "name": "Reliability",
                "title": "Please select what's applicable",
                "choices": [{
                        "value": "Status endpoint to indicate service health",
                        "text": "We have a status endpoint to indicate service health (it should monitor real things like database connections and downstream dependencies) "
                    },
                    {
                        "value": "Tools to monitor status",
                        "text": "We have Stackdriver or similar tools to monitor status "
                    },
                    {
                        "value": "An on-call playbook for the service, linked it into the main on-call documentation",
                        "text": "We have created an on-call playbook for your service, linked it into the main on-call documentation"
                    }
                ]
            }],
            "title": "Reliability"
        },
        {
            "name": "Alerts",
            "elements": [{
                    "type": "html",
                    "name": "Alert-general",
                    "html": "<div class=\"tip\">Please reach out to AppSec team for initial security discussion. This is basically a\n            Threat Modeling and Security Architecture Review session. The main purpose of the meeting is for us to take\n an iterative, recursive look at the architecture and design of a new service/system.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-Sourceclear",
                    "visibleIf": "{Security tools} notcontains \"dependency_scan\"",
                    "html": "<div class=\"highs\">You must use SourceClear, Snyk or similar tools for downstream dependency/3rd\n            party component management. Ask AppSec team to add your repo.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-Trivy",
                    "visibleIf": "{Security tools} notcontains \"Image_scan\"",
                    "html": "<div class=\"highs\">You must use security tools to scan your Docker images. Ask AppSec team to help you setup this tool.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-ZAP",
                    "visibleIf": "{Security tools} notcontains \"DAST\"",
                    "html": "<div class=\"highs\">Your service must be scanned weekly/mothly via DAST tools. Ask AppSec team to help you setup this tool.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-gitsecrets",
                    "visibleIf": "{Security tools} notcontains \"Git-secrets\"",
                    "html": "<div class=\"highs\">You must use <a href=\"https://github.com/awslabs/git-secrets\">git-secrets</a>\n            to prevent accidental commit of secrets to source code repository.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-vault",
                    "visibleIf": "{Security tools} notcontains 'Secret_management'",
                    "html": "<div class=\"highs\">You should only store secrets in\n Vault , Google Secret Manager or similar tools. </div>  "
                },
                {
                    "type": "html",
                    "name": "Alert-sentry",
                    "visibleIf": "{Security tools} notcontains \"Monitoring_tool\"",
                    "html": "<div class=\"highs\">You should setup\n Sentry or a similar tool. Reach out to #dsp-devops to get started.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-codacy",
                    "visibleIf": "{Security tools} notcontains \"SAST\"",
                    "html": "<div class=\"highs\">You should use\n  Codacy, SonarCloud or similar tools for security static code analysis.\n  Reach out to Appsec team to set it up for your repository.\n</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-database",
                    "visibleIf": "{Applicable} contains \"managed-sql\"",
                    "html": "<div class=\"highs\">Please make sure your database is using a private IP or is behind a proxy.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-Docker-images-update",
                    "visibleIf": "{docker_images_update} = \"No\"",
                    "html": "<div class=\"highs\">Reach out to AppSec team to discuss about the Docker image update plan.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-logs",
                    "visibleIf": "{Logging} = \"No\"",
                    "html": "<div class=\"highs\">Please make sure to start planning using Azure Monitor/Stackdriver or similar tools for logging.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-logsPersistence",
                    "visibleIf": "{Logs persistence for at least 90 days} = \"No\"",
                    "html": "<div class=\"highs\">Please make sure to allow logs to persist for at least 90 days in a searchable form. If you don't have a good idea of what events to audit, ask DevOps.If your service is part of the Terra system, the minimum set of events that must be audited are:\n<ul>\n<li>Account Management: account created, account deleted, account disabled, account expired, password changed </li>\n<li>Directory Service: Object (user, machine,etc) Added to domain/directory. Object removed from domain/directory. Domain policy change. </li>\n<li>Filesystem Events: Directory created. Directory deleted. Directory read. Directory write. Directory permissions changed. File created. File deleted. File read. File write. File permissions changed. Object access.</li>\n<li>Logging Event: Event log full. Event log overwritten.</li>\n<li>Network Events: ACL changed. Traffic blocked at firewall.</li>\n<li>Policy Change: All</li>\n<li>Privilege Use: Privilege escalation (i.e sudo). Privileged object or service called. Object accessed by privileged account.</li>\n<li>Process Tracking: Process executed. Process terminated. Scheduled event executed. Scheduled event failed.</li>\n<li>System Events: Service stopped. System startup. System shutting down. Session disconnected.</li>\n</ul>\n</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-LoggingMonitoring",
                    "visibleIf": "{Are logs reviewed} = \"No\"",
                    "html": "<div class=\"highs\">For logging you should be able to know WHO did WHAT to WHAT OBJECT and WHEN. You must have some human review of logs on a regular basis for key events, and have alerts setup for these events. Ask dsp-devops if you need clarification.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-LoggingAuth",
                    "html": "<div class=\"highs\">You should log authorization and authentication attempts. The application has the most information about the user (e.g. identity, roles, permissions) and the context of the event (target, action, outcomes), and often this data is not available to either infrastructure devices, or even closely-related applications.</div>",
                    "visibleIf": "{Authent/Authorz attemps logged} = \"No\""
                },
                {
                    "type": "html",
                    "name": "Alert-unitTesting",
                    "visibleIf": "{Unit testing} = \"Weak\"  or {Unit testing} = \"Nonexistent\"",
                    "html": "<div class=\"medium\">Unit tests have become quasi-standard for testing the functionality of software at a low level. Although this questionnaire focuses on security, the functional correctness of the application is also important. Particularly for web applications, where it is difficult (often impossible) to fall back to a previous version, functional bugs can cause problems with both integrity and availability. Consider implementing unit tests. For services within the Terra system boundary, unit tests are required. Please contact QA for guidance.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-performanceTesting",
                    "visibleIf": "{Performance testing} = \"Weak\"  or {Performance testing} = \"Nonexistent\"",
                    "html": "<div class=\"medium\">Performance testing will determine whether your service meets scalability and stability requirements under expected workloads. Please consider implementing. Please contact QA for guidance regarding services within the Terra system boundary.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-monitoring",
                    "visibleIf": "{Post-launch monitoring} = \"Weak\" or {Post-launch monitoring} = \"Nonexistent\"",
                    "html": "<div class=\"medium\">Exceptions and crashes often indicate an underlying security problem. Monitoring the deployed application can go a long way toward quickly identifying and subsequently fixing vulnerabilities. In carefully designed software products, exceptions should be a fairly rare occurrence; it therefore usually does not introduce significant overhead to monitor for them.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-filesWithoutSecrets",
                    "visibleIf": "{Deployment} notcontains \"Config files do NOT contain any secrets \"",
                    "html": "<div class=\"medium\">You need to ensure that your config files contain no secrets. Additionally please review <a href=\"https://dsp-security.broadinstitute.org/platform-security-categories/managing-secrets\">DSP Security</a> on how to avoid leaking secrets to build logs.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-ciConfigTemplatized",
                    "visibleIf": "{Deployment} notcontains \"Config files are templatized \"",
                    "html": "<div class=\"medium\">We recommmend that your CI config files are templatized\n</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-statusEndpoint",
                    "visibleIf": "{Reliability} notcontains \"Status endpoint to indicate service health\"",
                    "html": "<div class=\"medium\">Have a status endpoint to indicate service health (it should monitor real things like database connections and downstream dependencies)</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-relicSynthetic",
                    "visibleIf": "{Reliability} notcontains 'Tools to monitor status'",
                    "html": "<div class=\"medium\">Have Stackdriver or similar tools configured to monitor/status.</div>"
                },
                {
                    "type": "html",
                    "name": "Alert-oncallPlaybook",
                    "visibleIf": "{Reliability} notcontains \"An on-call playbook for the service, linked it into the main on-call documentation\"",
                    "html": "<div class=\"medium\">You should create an on-call playbook for your service, and link it into the main on-call documentation</div>"
                }
            ],
            "title": "Alerts"
        },
        {
            "name": "Jira Ticket",
            "elements": [{
                    "type": "text",
                    "name": "JiraProject",
                    "title": "Track all security actions by creating a Jira ticket in your board.",
                    "description": "Please add the KEY of your Jira project. For example: ATP"
                },
                {
                    "type": "checkbox",
                    "name": "Ticket_Description",
                    "title": "Add actions to your ticket:",
                    "enableIf": "{JiraProject} notempty",
                    "isRequired": true,
                    "choices": [
                        "Please reach out to AppSec team for initial security discussion. This is basically a Threat Modeling and Security Architecture Review session. The main purpose of the meeting is for us to take  an iterative, recursive look at the architecture and design of a new service/system.",
                        {
                            "value": "You must use SourceClear, Snyk or similar tools for downstream dependency/3rd  party component management. Ask AppSec team to add your repo.",
                            "visibleIf": "{Security tools} notcontains \"dependency_scan\""
                        },
                        {
                            "value": "You must use git-secrets to prevent accidental commit of secrets to source code repository.",
                            "visibleIf": "{Security tools} notcontains \"Git-secrets\""
                        },
                        {
                            "value": "You must use security tools to scan your Docker images. Ask AppSec team to help you setup this tool.",
                            "visibleIf": "{Security tools} notcontains \"Image_scan\""
                        },
                        {
                            "value": "Your service must be scanned weekly/mothly via DAST tools. Ask AppSec team to help you setup this tool.",
                            "visibleIf": "{Security tools} notcontains \"DAST\""
                        },
                        {
                            "value": "You should only store secrets in Vault, Secret Manager or similar tools.",
                            "visibleIf": "{Security tools} notcontains 'Secret_management'"
                        },
                        {
                            "value": "You should setup Sentry. Reach out to AppSec team to get started.",
                            "visibleIf": "{Security tools} notcontains \"Monitoring_tool\""
                        },
                        {
                            "value": "You should use Codacy, SonarCloud or similar tools for security static code analysis. Ask AppSec team to help you setup this tool.",
                            "visibleIf": "{Security tools} notcontains \"SAST\""
                        },
                        {
                            "visibleIf": "{Applicable} contains \"managed-sql\"",
                            "value": "Please make sure your database is using a private IP or is behind a proxy."
                        },
                        {
                            "visibleIf": "{docker_images_update} = \"No\"",
                            "value": "Reach out to AppSec team to discuss about the Docker images update plan."
                        },
                        {
                            "value": "Please make sure to start planning using Azure Monitor/Stackdriver or similar tools for logging",
                            "visibleIf": "{Logging} = \"No\""
                        },
                        {
                            "value": "Please make sure to allow logs to persist for at least 90 days in a searchable form. If you don't have a good idea of what events to audit, ask DevOps.If your service is part of the Terra system, the minimum set of events that must be audited are: Account Management: account created, account deleted, account disabled, account expired, password changed. Directory Service: Object (user, machine,etc) Added to domain/directory. Object removed from domain/directory. Domain policy change. Filesystem Events: Directory created. Directory deleted. Directory read. Directory write. Directory permissions changed. File created. File deleted. File read. File write. File permissions changed. Object access. >Logging Event: Event log full. Event log overwritten. Network Events: ACL changed. Traffic blocked at firewall. Policy Change: All. Privilege Use: Privilege escalation (i.e sudo). Privileged object or service called. Object accessed by privileged account. Process Tracking: Process executed. Process terminated. Scheduled event executed. Scheduled event failed. System Events: Service stopped. System startup. System shutting down. Session disconnected.",
                            "visibleIf": "{Logs persistence for at least 90 days} = \"No\""
                        },
                        {
                            "value": "For logging you should be able to know WHO did WHAT to WHAT OBJECT and WHEN. You must have some human review of logs on a regular basis for key events, and have alerts setup for these events. Ask dsp-devops if you need clarification.",
                            "visibleIf": "{Are logs reviewed} = \"No\""
                        },
                        {
                            "value": "You should log authorization and authentication attempts. The application has the most information about the user (e.g. identity, roles, permissions) and the context of the event (target, action, outcomes), and often this data is not available to either infrastructure devices, or even closely-related applications.",
                            "visibleIf": "{Authent/Authorz attemps logged} = \"No\""
                        },
                        {
                            "value": "Unit tests have become quasi-standard for testing the functionality of software at a low level. Although this questionnaire focuses on security, the functional correctness of the application is also important. Particularly for web applications, where it is difficult (often impossible) to fall back to a previous version, functional bugs can cause problems with both integrity and availability. Consider implementing unit tests.",
                            "visibleIf": "{Unit testing} = \"Weak\"  or {Unit testing} = \"Nonexistent\""
                        },
                        {
                            "value": "Performance testing will determine whether your service meets scalability and stability requirements under expected workloads. Please consider implementing. Please contact QA for guidance regarding services within the Terra system boundary.",
                            "visibleIf": "{Performance testing} = \"Weak\"  or {Performance testing} = \"Nonexistent\""
                        },
                        {
                            "value": "Exceptions and crashes often indicate an underlying security problem. Monitoring the deployed application can go a long way toward quickly identifying and subsequently fixing vulnerabilities. In carefully designed software products, exceptions should be a fairly rare occurrence; it therefore usually does not introduce significant overhead to monitor for them.",
                            "visibleIf": "{Post-launch monitoring} = \"Weak\" or {Post-launch monitoring} = \"Nonexistent\""
                        },
                        {
                            "value": "You need to ensure that your config files contain no secrets. Additionally please review DSP Security (https://dsp-security.broadinstitute.org/platform-security-categories/managing-secrets ) on how to avoid leaking secrets to build logs.",
                            "visibleIf": "{Deployment} notcontains \"Config files do NOT contain any secrets \""
                        },
                        {
                            "value": "We recommmend that your CI config files are templatized.",
                            "visibleIf": "{Deployment} notcontains \"Config files are templatized \""
                        },
                        {
                            "visibleIf": "{Reliability} notcontains 'Tools to monitor status'",
                            "value": "Have Stackdriver or similar tools configured to monitor/status."
                        },
                        {
                            "visibleIf": "{Reliability} notcontains \"Status endpoint to indicate service health\"",
                            "value": "Have a status endpoint to indicate service health (it should monitor real things like database connections and downstream dependencies)"
                        },
                        {
                            "value": "You should create an on-call playbook for your service, and link it into the main on-call documentation.",
                            "visibleIf": "{Reliability} notcontains \"An on-call playbook for the service, linked it into the main on-call documentation\""
                        }
                    ],
                    "showSelectAllItem": true
                }
            ],
            "title": "Jira Ticket"
        }
    ],
    "showNavigationButtons": "top",
    "showQuestionNumbers": "off",
    "questionErrorLocation": "bottom",
    "showProgressBar": "top"
}