options:
  env:
  - terraform_bucket=${PROJECT_ID}-terraform
  - defectdojo_image=gcr.io/${PROJECT_ID}/defectdojo-django

steps:
- id: terraform-bucket
  name: gcr.io/cloud-builders/gsutil
  entrypoint: sh
  args:
  - -c
  - gsutil mb gs://${terraform_bucket} &&
    gsutil versioning set on gs://${terraform_bucket} || true

- id: terraform
  name: hashicorp/terraform
  entrypoint: sh
  dir: cluster
  args:
  - -c
  - terraform init --backend-config="bucket=${terraform_bucket}" &&
    terraform plan --out=plan.out -var="project=${PROJECT_ID}" &&
    terraform apply plan.out &&
    terraform output | tr -d " " > output.sh

- id: cluster
  name: gcr.io/cloud-builders/gcloud
  entrypoint: sh
  dir: cluster
  args:
  - -c
  - |
    set -eu

    . ./output.sh
    gcloud container clusters get-credentials --zone "${zone}" "${cluster}"

    ./cnrm.sh "${cnrm_sa}"
    kubectl apply -f .

# build a common SDK image that provides kubectl and envsubst commands
- id: kubectl-sdk
  name: &kaniko gcr.io/kaniko-project/executor:debug
  waitFor: ['-']
  entrypoint: sh
  args:
  - -c
  - executor
      --destination=gcr.io/${PROJECT_ID}/kubectl-sdk
      --context=dir:///workspace/kubectl-sdk
      --cache=true

# build patched DefectDojo image
- id: defectdojo-docker
  name: *kaniko
  waitFor: ['-']
  entrypoint: sh
  args:
  - -c
  - executor
      --destination=${defectdojo_image}
      --context=dir:///workspace/defectdojo
      --cache=true
