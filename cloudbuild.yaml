options:
  env:
  - DD_DJANGO_IMAGE=us.gcr.io/${PROJECT_ID}/defectdojo-django:${SHORT_SHA}
  - DD_NGINX_IMAGE=us.gcr.io/${PROJECT_ID}/defectdojo-nginx:${SHORT_SHA}
  - CODEDX_IMAGE=us.gcr.io/${PROJECT_ID}/codedx:${SHORT_SHA}
  - DNS_DOMAIN=dsp-appsec.broadinstitute.org
  - DNS_ZONE=dsp-appsec
  - TERRAFORM_BUCKET=${PROJECT_ID}-terraform
  - BROAD_INGRESS_CSP=broad-ingress
  - DISK_SNAPSHOT_POLICY=appsec-apps-disk-snapshot-policy
  - GLOBAL_NAMESPACE=global
  - REGION=us-east1
  - ZONE_1=us-east1-b
  - ZONE_2=us-east1-c

steps:
# prepare GCS backend for Terraform
- id: terraform-bucket
  name: gcr.io/cloud-builders/gsutil
  entrypoint: sh
  args:
  - -c
  - gsutil mb "gs://$${TERRAFORM_BUCKET}" &&
    gsutil versioning set on "gs://$${TERRAFORM_BUCKET}" || true

# deploy GKE cluster and associated GCP resources
- id: terraform
  name: hashicorp/terraform
  entrypoint: sh
  dir: terraform
  args:
  - -c
  - terraform init
      -backend-config="bucket=$${TERRAFORM_BUCKET}" &&
    terraform plan -out=plan.out
      -var="project=${PROJECT_ID}"
      -var="region=$${REGION}"
      -var="zones=[\"$${ZONE_1}\",\"$${ZONE_2}\"]" &&
    terraform apply plan.out &&
    terraform output | tr -d " " > ../.env

# set up Config Connector and other global GKE resources
- id: shared
  name: &kubectl gcr.io/cloud-builders/kubectl
  entrypoint: sh
  dir: shared
  args:
  - -c
  - export $(xargs < ../.env) && ./global.sh

# deploy DefectDojo to GKE cluster
- id: defectdojo
  name: *kubectl
  entrypoint: ./deploy.sh
  dir: defectdojo

# build patched DefectDojo Django image to address
# https://github.com/DefectDojo/django-DefectDojo/issues/1890
- id: defectdojo-django-docker
  name: &docker gcr.io/cloud-builders/docker
  waitFor: ['-']
  entrypoint: sh
  dir: defectdojo
  args:
  - -c
  - docker build -t $${DD_DJANGO_IMAGE} -f Dockerfile.django . &&
    docker push $${DD_DJANGO_IMAGE}

# build patched DefectDojo Nginx image
- id: defectdojo-nginx-docker
  name: *docker
  waitFor: ['-']
  entrypoint: sh
  dir: defectdojo
  args:
  - -c
  - docker build -t $${DD_NGINX_IMAGE} -f Dockerfile.nginx . &&
    docker push $${DD_NGINX_IMAGE}

# deploy CodeDx to GKE cluster
- id: codedx
  name: *kubectl
  waitFor: ['shared']
  entrypoint: ./deploy.sh
  dir: codedx

# build patched CodeDx image
- id: codedx-docker
  name: *docker
  waitFor: ['-']
  entrypoint: sh
  dir: codedx
  args:
  - -c
  - docker build -t $${CODEDX_IMAGE} . &&
    docker push $${CODEDX_IMAGE}

timeout: 3600s
