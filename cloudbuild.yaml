options:
  env:
  - DD_IMAGE=us.gcr.io/${PROJECT_ID}/defectdojo-django
  - DNS_DOMAIN=dsp-appsec.broadinstitute.org
  - DNS_ZONE=dsp-appsec
  - TERRAFORM_BUCKET=${PROJECT_ID}-terraform
  - BROAD_INGRESS_CSP=broad-ingress

steps:
# prepare GCS backend for Terraform
- id: terraform-bucket
  name: gcr.io/cloud-builders/gsutil
  entrypoint: sh
  args:
  - -c
  - gsutil mb "gs://$${TERRAFORM_BUCKET}" &&
    gsutil versioning set on "gs://$${TERRAFORM_BUCKET}" || true

# deploy GKE cluster and associated GCP resources
- id: terraform
  name: hashicorp/terraform
  entrypoint: sh
  dir: cluster
  args:
  - -c
  - terraform init --backend-config="bucket=$${TERRAFORM_BUCKET}" &&
    terraform plan --out=plan.out -var="project=${PROJECT_ID}" &&
    terraform apply plan.out &&
    terraform output | tr -d " " > .env

# set up Config Connector and other shared GKE resources
- id: cluster
  name: &kubectl gcr.io/cloud-builders/kubectl
  entrypoint: sh
  dir: cluster
  args:
  - -c
  - export $(xargs < .env) && ./deploy.sh

# build patched DefectDojo image to address
# https://github.com/DefectDojo/django-DefectDojo/issues/1890
- id: defectdojo-docker
  name: gcr.io/cloud-builders/docker
  waitFor: ['-']
  entrypoint: sh
  dir: defectdojo
  args:
  - -c
  - docker build -t $${DD_IMAGE} . &&
    docker push $${DD_IMAGE}

# deploy DefectDojo to GKE cluster
- id: defectdojo
  name: *kubectl
  waitFor: ['cluster', 'defectdojo-docker']
  entrypoint: deploy.sh
  dir: defectdojo

timeout: 3600s
