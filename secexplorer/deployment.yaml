apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${STATEFUL_SET}
  namespace: ${NAMESPACE}
spec:
  serviceName: ${SERVICE}
  selector:
    matchLabels:
      service: ${SERVICE}
  template:
    metadata:
      labels:
        service: ${SERVICE}
    spec:
      runtimeClassName: gvisor

      volumes:
      - name: ${NGINX_VOLUME}
        configMap:
          name: ${NGINX_CONFIG}
      - name: ${SERVICE_VOLUME}
        persistentVolumeClaim:
          claimName: ${SERVICE_VOLUME}

      containers:
      - name: nginx
        image: nginx
        command: ['sh', '-c']
        ports:
        - name: ${TARGET_PORT}
          containerPort: 8080
        volumeMounts:
        - name: ${NGINX_VOLUME}
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true

      - name: neo4j
        image: neo4j
        command: ['sh', '-c']
        args:
          # value in $() will be replaced at runtime
        - echo "dbms.connector.bolt.advertised_address=${DNS_HOSTNAME}:443" >> conf/neo4j.conf &&
          NEO4J_AUTH=${NEO4J_USERNAME}/$(NEO4J_PASSWORD) exec /docker-entrypoint.sh neo4j
        envFrom:
        - secretRef:
            name: ${SERVICE_SECRET}
        volumeMounts:
        - name: ${SERVICE_VOLUME}
          mountPath: /data
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: cartography
spec:
  schedule: "0 0 * * *" # daily at midnight
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: ${K8S_SERVICE_ACCOUNT}
          runtimeClassName: gvisor
          restartPolicy: OnFailure

          containers:
          - name: cartography
            image: ${CARTOGRAPHY_IMAGE}
            envFrom:
            - secretRef:
                name: ${SERVICE_SECRET}
            args: [
              '--neo4j-uri', 'bolt://${SERVICE}:7687',
              '--neo4j-user', '${NEO4J_USERNAME}',
              '--neo4j-password-env-var', 'NEO4J_PASSWORD',
            ]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${K8S_SERVICE_ACCOUNT}
  namespace: ${NAMESPACE}
  annotations:
    iam.gke.io/gcp-service-account: ${GCP_SERVICE_ACCOUNT_EMAIL}
