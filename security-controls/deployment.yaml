---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: ${SERVICE_ACCOUNT}-sa-firestore-policy
  namespace: ${NAMESPACE}
spec:
  member: serviceAccount:${SERVICE_ACCOUNT}@${PROJECT_ID}.iam.gserviceaccount.com
  role: roles/datastore.user
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    external: projects/${PROJECT_ID}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name:  ${SERVICE}
  namespace: ${NAMESPACE}
spec:
  schedule: "0 1 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: ${SERVICE_ACCOUNT}
          runtimeClassName: gvisor
          nodeSelector:
            cloud.google.com/gke-nodepool: batch
          restartPolicy: OnFailure

          containers:
          - name: security-controls
            image: ${SDARQ_SECURITY_CONTROLS}
            command: ['python3', '/entrypoint.py']
            envFrom:
            - secretRef:
                name: ${SERVICE_SECRET}
            env:
              - name: DEFECT_DOJO_URL
                value: ${DEFECT_DOJO_URL}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name:  ${SERVICE}
  namespace: ${NAMESPACE}
spec:
  schedule: "0 1 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: ${SERVICE_ACCOUNT}
          runtimeClassName: gvisor
          nodeSelector:
            cloud.google.com/gke-nodepool: batch
          restartPolicy: OnFailure

          containers:
          - name: security-controls-notifier
            image: ${SDARQ_SECURITY_CONTROLS}
            command: ['python3', '/notify.py']
            envFrom:
            - secretRef:
                name: ${SERVICE_SECRET}