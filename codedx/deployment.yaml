apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${STATEFUL_SET}
  namespace: ${NAMESPACE}
spec:
  serviceName: ${SERVICE}
  selector:
    matchLabels:
      service: ${SERVICE}
  template:
    metadata:
      labels:
        service: ${SERVICE}
    spec:
      serviceAccountName: ${SERVICE_ACCOUNT}
      runtimeClassName: gvisor
      nodeSelector:
        cloud.google.com/gke-nodepool: apps

      volumes:
      - name: ${SERVICE_VOLUME}
        persistentVolumeClaim:
          claimName: ${SERVICE_VOLUME}

      containers:
      - name: codedx
        image: ${CODEDX_IMAGE}
        command: ['sh', '-c']
        args:
        - rm -f
            /opt/codedx/codedx.props \
            /opt/codedx/logback.xml &&
          start.sh
        env:
        - name: DB_URL
          value: jdbc:mysql://localhost/${DB_NAME}
        - name: DB_DRIVER
          value: com.mysql.jdbc.Driver
        - name: DB_USER
          value: ${DB_USER}
        - name: SUPERUSER_NAME
          value: admin
        envFrom:
        - secretRef:
            name: ${SERVICE_SECRET}
        ports:
        - name: ${TARGET_PORT}
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /codedx/login
            port: ${TARGET_PORT}
          timeoutSeconds: 10
          initialDelaySeconds: 360
        volumeMounts:
        - name: ${SERVICE_VOLUME}
          mountPath: /opt/codedx
        resources:
          requests:
            memory: 2500M

      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy
        command:
        - /cloud_sql_proxy
        - -instances=${PROJECT_ID}:${SQL_REGION}:${SQL_INSTANCE}=tcp:3306
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: ${SERVICE_ACCOUNT}-sa-sql-policy
  namespace: ${NAMESPACE}
spec:
  member: serviceAccount:${SERVICE_ACCOUNT}@${PROJECT_ID}.iam.gserviceaccount.com
  role: roles/cloudsql.client
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    external: projects/${PROJECT_ID}
---
apiVersion: sql.cnrm.cloud.google.com/v1beta1
kind: SQLInstance
metadata:
  name: ${SQL_INSTANCE}
  namespace: ${NAMESPACE}
  annotations:
    cnrm.cloud.google.com/deletion-policy: abandon
spec:
  databaseVersion: MYSQL_5_7
  region: ${SQL_REGION}
  settings:
    tier: db-custom-1-3840
    backupConfiguration:
      enabled: true
---
apiVersion: sql.cnrm.cloud.google.com/v1beta1
kind: SQLDatabase
metadata:
  name: ${DB_NAME}
  namespace: ${NAMESPACE}
  annotations:
    cnrm.cloud.google.com/deletion-policy: abandon
spec:
  instanceRef:
    name: ${SQL_INSTANCE}
---
apiVersion: sql.cnrm.cloud.google.com/v1beta1
kind: SQLUser
metadata:
  name: ${DB_USER}
  namespace: ${NAMESPACE}
  annotations:
    cnrm.cloud.google.com/deletion-policy: abandon
spec:
  instanceRef:
    name: ${SQL_INSTANCE}
  host: cloudsqlproxy~%
  password:
    valueFrom:
      secretKeyRef:
        name: ${SERVICE_SECRET}
        key: DB_PASSWORD
